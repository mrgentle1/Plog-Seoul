name: Backend CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    ## create application-database.yml
    - name: make application-stage.yml
      run: |
        ## create application-stage.yml
        cd ./back-end/plogging/src/main/resources

        # application-stage.yml 파일 생성
        touch ./application-stage.yml

        # GitHub-Actions 에서 설정한 값을 application-stage.yml 파일에 쓰기
        echo "${{ secrets.APPLICATION_STAGE }}" >> ./application-stage.yml
      shell: bash

    ## gradle build
    - name: 스프링부트 애플리케이션 빌드
      run: ./gradlew clean build -x test
      
    ## docker build image
    - name: 도커 이미지 빌드
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
      
    ## docker hub login
    - name: Docker Hub 로그인
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    ## docker push    
    - name: Docker Hub 푸쉬
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

    ## docker compose up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ec2-user
        key: ${{ secrets.KEY }}
        script: |
          docker stop $(docker ps -a -q) 
          docker rm $(docker ps -a -q) 
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
          docker run -d -p 80:8080 --name seoulplog_backend ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
